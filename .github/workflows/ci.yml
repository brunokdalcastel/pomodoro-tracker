name: CI/CD - Build, Push and Deploy to Azure

on:
  push:
    branches: [ "main" ]

jobs:
  # Job 1: Build e Push da Imagem Docker (igual à semana 1)
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ghcr.io/brunokdalcastel/pomodoro-tracker:${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
      - name: Log in to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/brunokdalcastel/pomodoro-tracker:${{ github.sha }}

  # Job 2: Deploy no Azure (depende do Job 1)
  deploy:
    runs-on: ubuntu-latest
    needs: build # Garante que este job só roda se o 'build' for bem-sucedido
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./infra

      - name: 'Get App Service Name' # Pega o nome do App Service do Terraform
        id: app_service_name
        run: |
          cd infra
          echo "name=$(terraform output -raw app_service_name)" >> $GITHUB_OUTPUT

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.app_service_name.outputs.name }}
          images: ${{ needs.build.outputs.image_tag }}